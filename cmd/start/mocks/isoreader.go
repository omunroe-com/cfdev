// Code generated by MockGen. DO NOT EDIT.
// Source: code.cloudfoundry.org/cfdev/cmd/start (interfaces: MetaDataReader)

// Package mocks is a generated GoMock package.
package mocks

import (
	iso "code.cloudfoundry.org/cfdev/iso"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIsoReader is a mock of MetaDataReader interface
type MockIsoReader struct {
	ctrl     *gomock.Controller
	recorder *MockIsoReaderMockRecorder
}

// MockIsoReaderMockRecorder is the mock recorder for MockIsoReader
type MockIsoReaderMockRecorder struct {
	mock *MockIsoReader
}

// NewMockIsoReader creates a new mock instance
func NewMockIsoReader(ctrl *gomock.Controller) *MockIsoReader {
	mock := &MockIsoReader{ctrl: ctrl}
	mock.recorder = &MockIsoReaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIsoReader) EXPECT() *MockIsoReaderMockRecorder {
	return m.recorder
}

// Read mocks base method
func (m *MockIsoReader) Read(arg0 string) (iso.Metadata, error) {
	ret := m.ctrl.Call(m, "Read", arg0)
	ret0, _ := ret[0].(iso.Metadata)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Read indicates an expected call of Read
func (mr *MockIsoReaderMockRecorder) Read(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Read", reflect.TypeOf((*MockIsoReader)(nil).Read), arg0)
}
